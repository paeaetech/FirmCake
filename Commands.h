#ifndef COMMANDS_H_YMC65IJY
#define COMMANDS_H_YMC65IJY

enum HostCommand 
{
	HOST_CMD_VERSION = 0,
	HOST_CMD_INIT = 1,
	HOST_CMD_GET_BUFFER_SIZE = 2,
	HOST_CMD_CLEAR_BUFFER = 3,
	HOST_CMD_GET_POSITION = 4,
	HOST_CMD_GET_RANGE = 5,
	HOST_CMD_SET_RANGE = 6,
	HOST_CMD_ABORT = 7,
	HOST_CMD_PAUSE = 8,
	HOST_CMD_PROBE = 9,
	HOST_CMD_TOOL_QUERY = 10,
	HOST_CMD_IS_FINISHED = 11,
	HOST_CMD_READ_EEPROM = 12,
	HOST_CMD_WRITE_EEPROM = 13,
	HOST_CMD_CAPTURE_TO_FILE = 14,
	HOST_CMD_END_CAPTURE = 15,
	HOST_CMD_PLAYBACK_CAPTURE = 16,
	HOST_CMD_RESET = 17,
	HOST_CMD_NEXT_FILENAME  = 18,
	HOST_CMD_GET_DBG_REG = 19,

	HOST_CMD_DEBUG_ECHO = 0x70,

	HOST_CMD_QUEUE_POINT_ABS = 129,
	HOST_CMD_SET_POSITION = 130,
	HOST_CMD_FIND_AXES_MINIMUM = 131,
	HOST_CMD_FIND_AXES_MAXIMUM = 132,
	HOST_CMD_DELAY = 133,
	HOST_CMD_CHANGE_TOOL = 134,
	HOST_CMD_WAIT_FOR_TOOL = 135,
	HOST_CMD_TOOL_COMMAND = 136,
	HOST_CMD_ENABLE_AXES = 137,
	
};

enum SlaveCommand
{
	SLAVE_CMD_VERSION = 0,
	SLAVE_CMD_INIT = 1,
	SLAVE_CMD_GET_TEMP = 2,
	SLAVE_CMD_SET_TEMP = 3,
	SLAVE_CMD_SET_MOTOR_1_PWM = 4,
	SLAVE_CMD_SET_MOTOR_2_PWM = 5,
	SLAVE_CMD_SET_MOTOR_1_RPM = 6,
	SLAVE_CMD_SET_MOTOR_2_RPM = 7,
	SLAVE_CMD_SET_MOTOR_1_DIR = 8,
	SLAVE_CMD_SET_MOTOR_2_DIR = 9,
	SLAVE_CMD_TOGGLE_MOTOR_1  = 10,
	SLAVE_CMD_TOGGLE_MOTOR_2  = 11,
	SLAVE_CMD_TOGGLE_FAN = 12,
	SLAVE_CMD_TOGGLE_VALVE = 13,
	SLAVE_CMD_SET_SERVO_1_POS = 14,
	SLAVE_CMD_SET_SERVO_2_POS = 15,
	SLAVE_CMD_FILAMENT_STATUS = 16,
	SLAVE_CMD_GET_MOTOR_1_PWM = 17,
	SLAVE_CMD_GET_MOTOR_2_PWM = 18,
	SLAVE_CMD_GET_MOTOR_1_RPM = 19,
	SLAVE_CMD_GET_MOTOR_2_RPM = 20,
	SLAVE_CMD_SELECT_TOOL = 21,
	SLAVE_CMD_IS_TOOL_READY = 22,
	SLAVE_CMD_PAUSE_UNPAUSE = 23,
	SLAVE_CMD_ABORT = 24,
	SLAVE_CMD_GET_PLATFORM_TEMP = 30,
	SLAVE_CMD_SET_PLATFORM_TEMP = 31,
};

enum HostReply {
	HOST_REPLY_ERROR = 0,
	HOST_REPLY_OK = 1,
	HOST_REPLY_BUFFER_OVERFLOW = 2,
	HOST_REPLY_INVALID_CRC = 3,
	HOST_REPLY_PACKET_TOO_BIG = 4,
	HOST_REPLY_UNSUPPORTED = 5,
	HOST_REPLY_TIMEOUT = 6,
};


#endif /* end of include guard: COMMANDS_H_YMC65IJY */



